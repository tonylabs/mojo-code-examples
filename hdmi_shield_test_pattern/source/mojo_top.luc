module mojo_top (
    input clk,              // 50MHz clock
    input rst_n,            // reset button (active low)
    output led [8],         // 8 user controllable LEDs
    input cclk,             // configuration clock, AVR ready when high
    output spi_miso,        // AVR SPI MISO
    input spi_ss,           // AVR SPI Slave Select
    input spi_mosi,         // AVR SPI MOSI
    input spi_sck,          // AVR SPI Clock
    output spi_channel [4], // AVR general purpose pins (used by default to select ADC channel)
    input avr_tx,           // AVR TX (FPGA RX)
    output avr_rx,          // AVR RX (FPGA TX)
    input avr_rx_busy,      // AVR RX buffer full
    output hdmi1_tmds [4],  // HDMI 1 TMDS
    output hdmi1_tmdsb [4]  // HDMI 1 TMDSB
  ) {
   
  sig rst;                  // reset signal
   
  clk_wiz_v3_6 clk_wiz (.CLK_IN1(clk));
  hdmi_encoder hdmi (.clk(clk_wiz.CLK_OUT1), .rst(0));
   
  .clk(hdmi.pclk) {
    // The reset conditioner is used to synchronize the reset signal to the FPGA
    // clock. This ensures the entire FPGA comes out of reset at the same time.
    reset_conditioner reset_cond;
  }
   
  always {
    reset_cond.in = ~rst_n; // input raw inverted reset signal
    rst = reset_cond.out;   // conditioned reset
     
    led = 8h00;             // turn LEDs off
    spi_miso = bz;          // not using SPI
    spi_channel = bzzzz;    // not using flags
    avr_rx = bz;            // not using serial port
     
    hdmi1_tmds = hdmi.tmds;   // connect the outputs
    hdmi1_tmdsb = hdmi.tmdsb;
     
    hdmi.red = hdmi.x[7:0];
    hdmi.green = hdmi.y[7:0];
    hdmi.blue = hdmi.x[7:0] ^ hdmi.y[7:0];
  }
}